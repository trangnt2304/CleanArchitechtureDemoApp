// Mocks generated by Mockito 5.2.0 from annotations
// in clean_architecture_demo_app/test/features/number_trivia/data/repositories/number_trivia_repositoru_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:clean_architecture_demo_app/core/platform/network_info.dart'
    as _i7;
import 'package:clean_architecture_demo_app/features/number_trivia/data/datasoures/number_trivia_local_source.dart'
    as _i5;
import 'package:clean_architecture_demo_app/features/number_trivia/data/datasoures/number_trivia_remote_data_source.dart'
    as _i2;
import 'package:clean_architecture_demo_app/features/number_trivia/data/models/number_trivia_model.dart'
    as _i6;
import 'package:clean_architecture_demo_app/features/number_trivia/domain/entities/number_trivia.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [NumberTrivialRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTrivialRemoteDataSource extends _i1.Mock
    implements _i2.NumberTrivialRemoteDataSource {
  MockNumberTrivialRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.NumberTrivia>? getConcreteNumberTrivia(int? number) =>
      (super.noSuchMethod(Invocation.method(#getConcreteNumberTrivia, [number]))
          as _i3.Future<_i4.NumberTrivia>?);
}

/// A class which mocks [NumberTrivialLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTrivialLocalDataSource extends _i1.Mock
    implements _i5.NumberTrivialLocalDataSource {
  MockNumberTrivialLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void>? cacheNumberTrivia(_i6.NumberTrivialModel? triviaToCache) =>
      (super.noSuchMethod(
              Invocation.method(#cacheNumberTrivia, [triviaToCache]),
              returnValueForMissingStub: Future<void>.value())
          as _i3.Future<void>?);
}

/// A class which mocks [NetworkInfor].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfor extends _i1.Mock implements _i7.NetworkInfor {
  MockNetworkInfor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
